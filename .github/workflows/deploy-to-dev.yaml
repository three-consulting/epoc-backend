name: Dev

on:
  push:
    branches:
      - dev
  workflow_dispatch:

env:
  PROJECT_ID: epoc-auth-dev-361109
  REPOSITORY: epoc-dev-container-repository
  SERVICE: epoc-backend-dev
  REGION: europe-north1


jobs:
  run_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          architecture: x64

      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew

      - name: Run tests
        run: |
          ./gradlew clean test

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Define image meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}
          tags: |
            type=raw,value=${{ github.sha }}
          labels: |
            org.opencontainers.image.authors=epoc
            org.opencontainers.image.vendor=three.consulting
          flavor: |
            latest=true

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          token_format: access_token

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push image to artifact registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          no-cache: false
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
