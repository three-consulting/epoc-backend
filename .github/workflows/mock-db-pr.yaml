name: Pull Request mock DB

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

env:
  REGISTRY: ghcr.io
  MOCK_DB_IMAGE: three-consulting/epoc-mock-db

jobs:
  run_tests_and_build_backend:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: epoc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'
          architecture: x64

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decrypt secrets
        run: |
          for filename in $( find -name "*-secrets.sql.gpg" ); do \
            gpg -q --batch --yes --decrypt-files --passphrase=${{ secrets.GPG }} $filename; \
          done

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Define test db image meta
        id: docker_meta_db
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.MOCK_DB_IMAGE }}
          tags: |
            type=raw,value=sha-${{ github.sha }}
          labels: |
            org.opencontainers.image.authors=epoc
            org.opencontainers.image.vendor=three.consulting
          flavor: |
            latest=true

      - name: Run backend
        env:
          SPRING_DATASOURCE_PASSWORD: password
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost/epoc
          SPRING_DATASOURCE_USERNAME: user
          SPRING_PROFILES_ACTIVE: dev
        run: |
          nohup ./gradlew bootRun > nohup.out 2>&1 &

      - name: Wait until backend has started
        run: |
          until $(curl --output /dev/null --silent --head --fail http://localhost:8080/actuator/health); do
            sleep 1
          done

      - name: Dump database schema generated by flyway
        uses: tj-actions/pg-dump@v3
        with:
          database_url: "postgres://user:password@localhost/epoc"
          path: "mock-db/db.sql"
          options: "-O -x"

      - name: Test building db image
        uses: docker/build-push-action@v5
        with:
          context: mock-db/.
          file: mock-db/Dockerfile
          no-cache: false
          push: false
          tags: ${{ steps.docker_meta_db.outputs.tags }}
          labels: ${{ steps.docker_meta_db.outputs.labels }}
