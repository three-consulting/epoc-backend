name: Main

on:
  push:
    branches:
      - main
jobs:
  run_tests_build_and_push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          architecture: x64

      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew

      - name: Run tests
        run: |
          ./gradlew clean test assemble

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Packages
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Define image meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE }}
          tags: |
            type=raw,value=sha-${{ github.sha }}
          labels: |
            org.opencontainers.image.authors=epoc
            org.opencontainers.image.vendor=three.consulting
          flavor: |
            latest=true

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          no-cache: false
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/three-consulting/epoc:latest'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-main.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-main.sarif'

  draft_release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: run_tests_build_and_push
    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
