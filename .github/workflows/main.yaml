name: Main

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: epoc-auth-dev-361109
  REPOSITORY: epoc-dev-container-repository
  SERVICE: epoc-backend-dev
  REGION: europe-north1

jobs:
  run_tests_and_deploy_to_gcp:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'
          architecture: x64

      - name: Grant execute permission for gradlew
        run: |
          chmod +x gradlew

      - name: Run tests
        run: |
          ./gradlew clean test

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Define image meta
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}
          tags: |
            type=raw,value=${{ github.sha }}
          labels: |
            org.opencontainers.image.authors=epoc
            org.opencontainers.image.vendor=three.consulting
          flavor: |
            latest=true

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_DEV }}
          token_format: access_token

      - name: Docker Auth
        id: docker-auth
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGION }}-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push image to artifact registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          no-cache: false
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          secrets: |
            FIREBASE_SERVICE_ACCOUNT_JSON=FIREBASE_SERVICE_ACCOUNT_JSON:latest
            SPRING_DATASOURCE_PASSWORD=SPRING_DATASOURCE_PASSWORD:latest
            SPRING_DATASOURCE_URL=SPRING_DATASOURCE_URL:latest
            SPRING_DATASOURCE_USERNAME=SPRING_DATASOURCE_USERNAME:latest
            SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI:latest
            SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI:latest

  draft_release:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
